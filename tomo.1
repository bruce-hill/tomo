.\" Automatically generated by Pandoc 3.1.8
.\"
.TH "TOMO" "1" "June 11, 2024" "" ""
.SH NAME
tomo - The programming language of tomorrow.
.SH SYNOPSIS
.TP
Run the REPL:
\f[B]tomo\f[R]
.TP
Run a program:
\f[B]tomo\f[R] \f[I]program.tm\f[R] [[\f[B]--\f[R]] \f[I]args\&...\f[R]]
.TP
Transpile tomo files to C files:
\f[B]tomo\f[R] \f[B]-t\f[R] \f[I]file1.tm\f[R] \f[I]file2.tm\f[R]\&...
.TP
Compile files to static object files:
\f[B]tomo\f[R] \f[B]-c\f[R] \f[I]file1.tm\f[R] \f[I]file2.tm\f[R]\&...
.TP
Compile file to an executable:
\f[B]tomo\f[R] \f[B]-e\f[R] \f[I]file1.tm\f[R]
.TP
Build a shared library:
\f[B]tomo\f[R] \f[B]-s=\f[R]\f[I]mylib.1.2.3\f[R] \f[I]file1.tm\f[R]
\f[I]file2.tm\f[R]\&...
.SH DESCRIPTION
Tomo is a programming language that is statically typed, compiled,
small, and garbage-collected, with concise syntax and built-in support
for high-performance, low-overhead datastructures.
It compiles by first outputting C code, which is then compiled using a C
compiler of your choice.
.SH OPTIONS
.TP
\f[B]-h\f[R], \f[B]--help\f[R]
Print the usage and exit.
.TP
\f[B]-t\f[R]
Transpile the input files to C code without compiling them.
.TP
\f[B]-c\f[R]
Compile the input files to static objects, rather than running them.
.TP
\f[B]-s=\f[R]\f[I]foo.1.2.3\f[R]
Compile the input files to a shared object file,
\f[B]libfoo.1.2.3.so\f[R], and shared header file,
\f[B]libfoo.1.2.3.h\f[R].
Also offer to install the resulting library.
.SS ENVIRONMENT VARIABLES
Some options can be configured by setting environment variables.
.TP
\f[B]VERBOSE=0|1|2\f[R]
Set the verbosity level.
.TP
\f[B]CC=\f[R]\f[I]c-compiler\f[R]
Set which C compiler is used.
.TP
\f[B]O=\f[R]\f[I]optimization-level\f[R]
Set which optimization level is passed to the C compiler.
Valid values are those accepted by your compiler\[cq]s \f[B]-O\f[R]
flag.
.TP
\f[B]AUTOFMT=\f[R]\f[I]autoformatter\f[R]
The program used to autoformat generated C code.
Default: \f[B]indent -kr -l100 -nbbo -nut -sob\f[R]
.SH AUTHORS
Bruce Hill (\f[I]bruce\[at]bruce-hill.com\f[R]).
