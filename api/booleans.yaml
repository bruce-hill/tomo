Bool.parse:
  short: parse into boolean
  description: >
    Converts a text representation of a boolean value into a boolean. Acceptable
    boolean values are case-insensitive variations of `yes`/`no`, `y`/`n`,
    `true`/`false`, `on`/`off`.
  return:
    type: 'Bool?'
    description: >
      `yes` if the string matches a recognized truthy boolean value; otherwise return `no`.
  args:
    text:
      type: 'Text'
      description: >
        The string containing the boolean value.
    remainder:
      type: '&Text?'
      default: 'none'
      description: >
        If non-none, this argument will be set to the remainder of the text after the matching part.
        If none, parsing will only succeed if the entire text matches.
  example: |
    >> Bool.parse("yes")
    = yes : Bool?
    >> Bool.parse("no")
    = no : Bool?
    >> Bool.parse("???")
    = none : Bool?

    >> Bool.parse("yesJUNK")
    = none : Bool?
    remainder : Text
    >> Bool.parse("yesJUNK", &remainder)
    = yes : Bool?
    >> remainder
    = "JUNK"
